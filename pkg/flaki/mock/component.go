// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/flaki-service/pkg/flaki (interfaces: IDGeneratorComponent)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	fb "github.com/cloudtrust/flaki-service/api/fb"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// IDGeneratorComponent is a mock of IDGeneratorComponent interface
type IDGeneratorComponent struct {
	ctrl     *gomock.Controller
	recorder *IDGeneratorComponentMockRecorder
}

// IDGeneratorComponentMockRecorder is the mock recorder for IDGeneratorComponent
type IDGeneratorComponentMockRecorder struct {
	mock *IDGeneratorComponent
}

// NewIDGeneratorComponent creates a new mock instance
func NewIDGeneratorComponent(ctrl *gomock.Controller) *IDGeneratorComponent {
	mock := &IDGeneratorComponent{ctrl: ctrl}
	mock.recorder = &IDGeneratorComponentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *IDGeneratorComponent) EXPECT() *IDGeneratorComponentMockRecorder {
	return m.recorder
}

// NextID mocks base method
func (m *IDGeneratorComponent) NextID(arg0 context.Context, arg1 *fb.FlakiRequest) (*fb.FlakiReply, error) {
	ret := m.ctrl.Call(m, "NextID", arg0, arg1)
	ret0, _ := ret[0].(*fb.FlakiReply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NextID indicates an expected call of NextID
func (mr *IDGeneratorComponentMockRecorder) NextID(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NextID", reflect.TypeOf((*IDGeneratorComponent)(nil).NextID), arg0, arg1)
}

// NextValidID mocks base method
func (m *IDGeneratorComponent) NextValidID(arg0 context.Context, arg1 *fb.FlakiRequest) *fb.FlakiReply {
	ret := m.ctrl.Call(m, "NextValidID", arg0, arg1)
	ret0, _ := ret[0].(*fb.FlakiReply)
	return ret0
}

// NextValidID indicates an expected call of NextValidID
func (mr *IDGeneratorComponentMockRecorder) NextValidID(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NextValidID", reflect.TypeOf((*IDGeneratorComponent)(nil).NextValidID), arg0, arg1)
}
