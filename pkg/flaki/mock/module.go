// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/flaki-service/pkg/flaki (interfaces: IDGeneratorModule)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// IDGeneratorModule is a mock of IDGeneratorModule interface
type IDGeneratorModule struct {
	ctrl     *gomock.Controller
	recorder *IDGeneratorModuleMockRecorder
}

// IDGeneratorModuleMockRecorder is the mock recorder for IDGeneratorModule
type IDGeneratorModuleMockRecorder struct {
	mock *IDGeneratorModule
}

// NewIDGeneratorModule creates a new mock instance
func NewIDGeneratorModule(ctrl *gomock.Controller) *IDGeneratorModule {
	mock := &IDGeneratorModule{ctrl: ctrl}
	mock.recorder = &IDGeneratorModuleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *IDGeneratorModule) EXPECT() *IDGeneratorModuleMockRecorder {
	return m.recorder
}

// NextID mocks base method
func (m *IDGeneratorModule) NextID(arg0 context.Context) (string, error) {
	ret := m.ctrl.Call(m, "NextID", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NextID indicates an expected call of NextID
func (mr *IDGeneratorModuleMockRecorder) NextID(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NextID", reflect.TypeOf((*IDGeneratorModule)(nil).NextID), arg0)
}

// NextValidID mocks base method
func (m *IDGeneratorModule) NextValidID(arg0 context.Context) string {
	ret := m.ctrl.Call(m, "NextValidID", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// NextValidID indicates an expected call of NextValidID
func (mr *IDGeneratorModuleMockRecorder) NextValidID(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NextValidID", reflect.TypeOf((*IDGeneratorModule)(nil).NextValidID), arg0)
}
