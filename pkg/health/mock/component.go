// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/flaki-service/pkg/health (interfaces: HealthCheckers)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	json "encoding/json"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// HealthCheckers is a mock of HealthCheckers interface
type HealthCheckers struct {
	ctrl     *gomock.Controller
	recorder *HealthCheckersMockRecorder
}

// HealthCheckersMockRecorder is the mock recorder for HealthCheckers
type HealthCheckersMockRecorder struct {
	mock *HealthCheckers
}

// NewHealthCheckers creates a new mock instance
func NewHealthCheckers(ctrl *gomock.Controller) *HealthCheckers {
	mock := &HealthCheckers{ctrl: ctrl}
	mock.recorder = &HealthCheckersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *HealthCheckers) EXPECT() *HealthCheckersMockRecorder {
	return m.recorder
}

// HealthChecks mocks base method
func (m *HealthCheckers) HealthChecks(arg0 context.Context, arg1 map[string]string) (json.RawMessage, error) {
	ret := m.ctrl.Call(m, "HealthChecks", arg0, arg1)
	ret0, _ := ret[0].(json.RawMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HealthChecks indicates an expected call of HealthChecks
func (mr *HealthCheckersMockRecorder) HealthChecks(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthChecks", reflect.TypeOf((*HealthCheckers)(nil).HealthChecks), arg0, arg1)
}
